/* === Floating Stars Background === */

/* CSS variables for cursor tracking */
:root {
  --cursor-x: 0px;
  --cursor-y: 0px;
}

.stars {
  pointer-events: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: 2;
  overflow: visible;
  /* Move the star field slightly opposite the cursor */
  transform: translate(
    calc(var(--cursor-x, 0px) * -0.03),
    calc(var(--cursor-y, 0px) * -0.03)
  );
  transition: transform 0.05s cubic-bezier(0.4,0,0.2,1);
}

.star {
  position: absolute;
  width: 2px;
  height: 2px;
  border-radius: 50%;
  background: radial-gradient(circle, #fff 70%, #c8a2ff 100%);
  box-shadow: 0 0 6px 2px #c8a2ff88, 0 0 2px 1px #fff8;
  opacity: 0.7;
  animation: floatStar 4s ease-in-out infinite alternate;
}

/* Optional: for some larger/smaller stars */
.star.star-lg {
  width: 3.5px;
  height: 3.5px;
  opacity: 0.85;
  filter: blur(0.5px);
}
.star.star-sm {
  width: 1px;
  height: 1px;
  opacity: 0.4;
}

@keyframes floatStar {
  0% {
    transform: translateY(0) scale(1);
    opacity: 0.7;
    filter: blur(0.1px);
  }
  40% {
    opacity: 1;
    filter: blur(0.5px);
  }
  60% {
    opacity: 0.8;
    filter: blur(0.2px);
  }
  100% {
    transform: translateY(-6px) scale(1.1);
    opacity: 0.6;
    filter: blur(1px);
  }
}
@import "tailwindcss";

/* Define global CSS variables for colors and fonts */
:root {
  --background: #1e1e1e00; /* graphite background */
  --foreground: #ededed; /* light foreground text */
  --accent: #c8a2ff;     /* lilac accent color */
  --secondary: #FF69B4;
  --font-sans: 'Montserrat', 'Inter', 'Helvetica Neue', Helvetica, Arial, sans-serif;
  --font-mono: 'JetBrains Mono', 'Fira Code', monospace;
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --color-accent: var(--accent);
  --font-sans: var(--font-sans);
  --font-mono: var(--font-mono);
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #15151500; /* graphite background for dark mode */
    --foreground: #ededed;
    --accent: #c8a2ff;
    --secondary: #FF69B4;
  }
}

body {
  background: #1e1e1e00;
  color: var(--foreground);
  font-family: var(--font-sans);
  margin: 0;
  padding: 0;
  position: relative;
  overflow-x: hidden;
  z-index: 0;
  /* Ensure stars are behind content */
}

/* Accent utility class */
.accent {
  color: var(--accent);
}
.secondary {
  color: var(--secondary);
}

/* Example for lilac background highlights */
.bg-accent {
  background-color: var(--accent);
}

/* Cursor highlight */
body::after {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  background: linear-gradient(
    165deg,
    oklch(0.17 0.05 305) 0%,
    oklch(0.17 0.04 300) calc(25% + (var(--cursor-x, 50%) - 50%) * 0.3 + (var(--cursor-y, 50%) - 50%) * 0.3),
    oklch(0.17 0.04 295) calc(50% + (var(--cursor-x, 50%) - 50%) * 0.5 + (var(--cursor-y, 50%) - 50%) * 0.5),
    oklch(0.16 0.02 290) calc(75% + (var(--cursor-x, 50%) - 50%) * 0.3 + (var(--cursor-y, 50%) - 50%) * 0.3),
    oklch(0.15 0.00 290) 100%
    /* oklch(62.793% 0.25768 29.223) 0%,
    oklch(87.27% 0.24874 148.616) calc(20% + (var(--cursor-x, 50%) - 50%) * 0.3 + (var(--cursor-y, 50%) - 50%) * 0.3),
    oklch(45.641% 0.31003 266.137) calc(50% + (var(--cursor-x, 50%) - 50%) * 0.5 + (var(--cursor-y, 50%) - 50%) * 0.5),
    oklch(86.655% 0.29397 142.6) calc(80% + (var(--cursor-x, 50%) - 50%) * 0.3 + (var(--cursor-y, 50%) - 50%) * 0.3),
    oklch(62.793% 0.25768 29.223) 100% */
  );
  transition: background 0.1s;
  z-index: -1;
}

.button {
  position: relative;
  transition: transform 0.2s ease, box-shadow 0.2s ease; /* smooth animation */
}

.button:hover {
  transform: scale(1.05); /* grows 5% on hover */
  box-shadow: 0 8px 20px rgba(0,0,0,0.2);
}

.button::after {
  content: '';
  position: absolute;
  inset: 0;
  pointer-events: none;
  background: radial-gradient(circle at var(--x,50%) var(--y,50%), oklch(1 0 0 / 0.15) 0%, rgba(0,0,0,0) 100%);
  opacity: 0;
  transition: opacity 0.3s ease; /* smooth fade-in/out */
}

.button:hover::after {
  opacity: 1;
}

.button-dark {
  position: relative;
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.button-dark:hover {
  transform: scale(1.05); /* grows 5% on hover */
  box-shadow: 0 8px 20px rgba(0,0,0,0.2);
}

.button-dark::after {
  content: '';
  position: absolute;
  inset: 0;
  pointer-events: none;
  background: radial-gradient(circle at var(--x,50%) var(--y,50%), oklch(0 0 0 / 0.3) 0%, rgba(0,0,0,0) 100%);
  opacity: 0;
  transition: opacity 0.3s ease; /* smooth fade-in/out */
}

.button-dark:hover::after {
  opacity: 1;
}

@keyframes bob {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-10px); } /* moves up by 10px at midpoint */
}

.bob {
  animation: bob 1.5s ease-in-out infinite;
}

html {
  scroll-behavior: smooth;
}
/* Optionally, you can use body::before for the star field, but .stars container is recommended for flexibility */
/* 
body::before {
  content: '';
  position: fixed;
  inset: 0;
  z-index: -2;
  pointer-events: none;
  transform: translate(
    calc(var(--cursor-x, 0px) * -0.03),
    calc(var(--cursor-y, 0px) * -0.03)
  );
} 
*/
